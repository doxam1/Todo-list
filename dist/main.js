(()=>{var e={208:(e,t,o)=>{"use strict";o.d(t,{A:()=>a});var r=o(354),n=o.n(r),c=o(314),s=o.n(c)()(n());s.push([e.id,"body{margin:0;display:grid;height:100svh;grid-template:1fr 6fr/1fr 4fr;gap:.1rem}body .appHeader{display:flex;justify-content:center;align-items:center}body .menu{grid-area:2/1/-1/2}body .menu #newTodoNote fieldset{display:flex;flex-direction:column;gap:1rem;border:none}body .allProjects{grid-area:1/2/-1/-1}body .allProjects button.projectBtn{background-color:#fff;border:none;border-bottom:1px ridge #000;cursor:pointer;height:40px;width:120px;border-radius:12px 12px 0px 0px}body .allProjects button.projectBtn:not(:focus){background-color:#dfdada}body .allProjects .ProjectTodoNotes{background-color:#fff;height:100%;display:grid;grid-template-columns:repeat(auto-fill, minmax(300px, 1fr));gap:1rem;padding:1rem}body .allProjects .ProjectTodoNotes .todoDiv{padding:1rem;position:relative}body .allProjects .ProjectTodoNotes .todoDiv .delNoteBtn{position:absolute;top:2%;right:5%}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,KAAK,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,6BAA6B,CAAC,SAAS,CAAC,gBAAgB,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,WAAW,kBAAkB,CAAC,iCAAiC,YAAY,CAAC,qBAAqB,CAAC,QAAQ,CAAC,WAAW,CAAC,kBAAkB,mBAAmB,CAAC,oCAAoC,qBAAqB,CAAC,WAAW,CAAC,4BAA4B,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC,+BAA+B,CAAC,gDAAgD,wBAAwB,CAAC,oCAAoC,qBAAqB,CAAC,WAAW,CAAC,YAAY,CAAC,2DAA2D,CAAC,QAAQ,CAAC,YAAY,CAAC,6CAA6C,YAAY,CAAC,iBAAiB,CAAC,yDAAyD,iBAAiB,CAAC,MAAM,CAAC,QAAQ",sourcesContent:["body{margin:0;display:grid;height:100svh;grid-template:1fr 6fr/1fr 4fr;gap:.1rem}body .appHeader{display:flex;justify-content:center;align-items:center}body .menu{grid-area:2/1/-1/2}body .menu #newTodoNote fieldset{display:flex;flex-direction:column;gap:1rem;border:none}body .allProjects{grid-area:1/2/-1/-1}body .allProjects button.projectBtn{background-color:#fff;border:none;border-bottom:1px ridge #000;cursor:pointer;height:40px;width:120px;border-radius:12px 12px 0px 0px}body .allProjects button.projectBtn:not(:focus){background-color:#dfdada}body .allProjects .ProjectTodoNotes{background-color:#fff;height:100%;display:grid;grid-template-columns:repeat(auto-fill, minmax(300px, 1fr));gap:1rem;padding:1rem}body .allProjects .ProjectTodoNotes .todoDiv{padding:1rem;position:relative}body .allProjects .ProjectTodoNotes .todoDiv .delNoteBtn{position:absolute;top:2%;right:5%}"],sourceRoot:""}]);const a=s},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var o="",r=void 0!==t[5];return t[4]&&(o+="@supports (".concat(t[4],") {")),t[2]&&(o+="@media ".concat(t[2]," {")),r&&(o+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),o+=e(t),r&&(o+="}"),t[2]&&(o+="}"),t[4]&&(o+="}"),o})).join("")},t.i=function(e,o,r,n,c){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(s[i]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&s[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),o&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=o):d[2]=o),n&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=n):d[4]="".concat(n)),t.push(d))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],o=e[3];if(!o)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(n," */");return[t].concat([c]).join("\n")}return[t].join("\n")}},72:e=>{"use strict";var t=[];function o(e){for(var o=-1,r=0;r<t.length;r++)if(t[r].identifier===e){o=r;break}return o}function r(e,r){for(var c={},s=[],a=0;a<e.length;a++){var i=e[a],l=r.base?i[0]+r.base:i[0],d=c[l]||0,u="".concat(l," ").concat(d);c[l]=d+1;var p=o(u),A={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=n(A,r);r.byIndex=a,t.splice(a,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function n(e,t){var o=t.domAPI(t);return o.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;o.update(e=t)}else o.remove()}}e.exports=function(e,n){var c=r(e=e||[],n=n||{});return function(e){e=e||[];for(var s=0;s<c.length;s++){var a=o(c[s]);t[a].references--}for(var i=r(e,n),l=0;l<c.length;l++){var d=o(c[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}c=i}}},659:e=>{"use strict";var t={};e.exports=function(e,o){var r=function(e){if(void 0===t[e]){var o=document.querySelector(e);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(e){o=null}t[e]=o}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(o)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,o)=>{"use strict";e.exports=function(e){var t=o.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(o){!function(e,t,o){var r="";o.supports&&(r+="@supports (".concat(o.supports,") {")),o.media&&(r+="@media ".concat(o.media," {"));var n=void 0!==o.layer;n&&(r+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),r+=o.css,n&&(r+="}"),o.media&&(r+="}"),o.supports&&(r+="}");var c=o.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,o)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},743:()=>{let e=new Date,t=e.getDate(),o=e.getMonth()+1,r=e.getFullYear();t<10&&(t="0"+t),o<10&&(o="0"+o),e=r+"-"+o+"-"+t+"T00:00:00",document.getElementById("date").setAttribute("min",e)}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var c=t[r]={id:r,exports:{}};return e[r](c,c.exports,o),c.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.nc=void 0;var r={};(()=>{"use strict";o.d(r,{X:()=>S});var e=o(72),t=o.n(e),n=o(825),c=o.n(n),s=o(659),a=o.n(s),i=o(56),l=o.n(i),d=o(540),u=o.n(d),p=o(113),A=o.n(p),m=o(208),f={};f.styleTagTransform=A(),f.setAttributes=l(),f.insert=a().bind(null,"head"),f.domAPI=c(),f.insertStyleElement=u(),t()(m.A,f),m.A&&m.A.locals&&m.A.locals;class y{constructor(e,t,o,r,n){this.title=e,this.description=t,this.dueDate=o,this.priority=r,this.project=n}static allTodosNotes=new Array;get allTodosNotes(){return this.allTodosNotes}pushToTodoNotes(){y.allTodosNotes.push({title:this.title,description:this.description,dueDate:this.dueDate,priority:this.priority,project:this.project})}deleteFromTodoNotes(){y.allTodosNotes=y.allTodosNotes.filter((e=>this.title!==e.title&&this.description!==e.description))}}o(743);const C=document.getElementById("projectName"),v=document.querySelector(".projectsNavBtns"),h=["test","another"];function g(e){const t=document.createElement("div");t.classList.add("todoDiv",`${e.project}`);const o=document.createElement("h1");o.textContent=e.title;const r=document.createElement("p");r.textContent=e.description;const n=document.createElement("div");n.textContent="Due Date: "+e.dueDate.split("T");const c=document.createElement("div");c.textContent="Priority: "+e.priority;const s=document.createElement("div");s.textContent="Project Name: "+e.project;const a=document.createElement("button");a.classList.add("delNoteBtn"),a.textContent="X",t.append(a,o,r,n,c,s);let i="";switch(e.priority){case"Normal":i="black";break;case"No hurry":i="green";break;case"Super important":i="red"}a.onclick=()=>{!function(e,t,o,r){document.querySelector(".ProjectTodoNotes").removeChild(e);const n=y.allTodosNotes.findIndex((e=>e.title==t&&e.description==o&&e.project==r));y.allTodosNotes.splice(n,1),console.log(y.allTodosNotes)}(t,o.textContent,r.textContent,e.project)},t.style.boxShadow=`1px 1px 4px 1px ${i}`,document.querySelector(".ProjectTodoNotes").appendChild(t)}h.forEach((e=>{const t=document.createElement("option");t.textContent=e,t.setAttribute("value",e),C.insertBefore(t,C.children[0]),C.value=t.value;const o=document.createElement("button");o.textContent=`${e}`,o.classList.add("projectBtn",`${e}`),v.appendChild(o),document.getElementById("DefaultProjectOption").selected=!0,S()})),C.addEventListener("change",(e=>{if("newProject"==e.target.value){const e=prompt("enter project name: ");h.push(e),console.log(h);const t=document.createElement("option");t.textContent=e,t.setAttribute("value",e),C.insertBefore(t,C.children[0]),C.value=t.value;const o=document.createElement("button");o.textContent=`${e}`,o.classList.add("projectBtn",`${e}`),v.appendChild(o),S()}}));const b=document.getElementById("title"),x=document.getElementById("description"),j=(document.querySelector("#date"),document.querySelector(".addNewProjectBtn"),document.querySelector(".errorMsg")),B=document.querySelector(".addNewProjectBtn"),N=document.getElementById("title"),T=document.getElementById("description"),P=document.querySelector("#date"),E=document.querySelector("#projectName");function S(){document.querySelectorAll(".projectBtn").forEach((e=>{e.onclick=()=>{document.querySelectorAll(".todoDiv").forEach((t=>{if(e.classList.contains("allTodoNotesFromAllProjects"))return document.querySelector(".ProjectTodoNotes").innerHTML="",y.allTodosNotes.forEach(((e,t)=>{g(y.allTodosNotes[t])})),void(t.style.display="block");const o=e.className.split(" ").slice(-1)[0];document.querySelectorAll(`div.${o}`).forEach((e=>{e.style.display="block"})),t.classList.contains(`${o}`)||(t.style.display="none")}))}}))}B.addEventListener("click",(e=>{if(e.preventDefault(),j.style.color="red",j.style.textAlign="center",!(""==b.value?(j.textContent="please enter title",setTimeout((()=>{j.textContent=""}),1e3),0):""!=x.value||(j.textContent="please enter description",setTimeout((()=>{j.textContent=""}),1e3),0)))return;const t=document.querySelector('input[name="priority"]:checked').value;new y(N.value,T.value,P.value,t,E.options[E.selectedIndex].text).pushToTodoNotes(),g(y.allTodosNotes[y.allTodosNotes.length-1]),document.querySelector(`.${projectName.value}`).click(),N.value="",T.value="",document.querySelector("#normal").checked=!0,S()})),S(),document.querySelector(".allTodoNotesFromAllProjects").onclick=()=>{document.querySelector(".ProjectTodoNotes").innerHTML="",console.log(y.allTodosNotes),y.allTodosNotes.forEach(((e,t)=>{g(y.allTodosNotes[t])}))}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,